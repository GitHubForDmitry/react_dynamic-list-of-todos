{"version":3,"sources":["components/User.js","components/TodoItem.js","components/TodoList.js","components/dataComponents.js","App.js","index.js"],"names":["text","textAlign","fontSize","User","_ref","users","react_default","a","createElement","className","style","username","email","styleCompleted","fontFamily","textDecoration","color","TodoItem","item","completed","title","type","defaultChecked","TodoList","components_TodoItem","getTodos","Object","asyncToGenerator","regenerator_default","mark","_callee","response","todos","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","apply","this","arguments","getUsers","_ref2","_callee2","_context2","App","state","isLoaded","isLoading","handleClick","result","_this","setState","map","todo","objectSpread","user","find","id","userId","sortName","prevState","sort","b","sortComplete","res","key","components_TodoList","components_User","onClick","disabled","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.d37c81c4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst text = {\n  textAlign: 'left',\n  fontSize: '16px',\n}\n\nfunction User({ users }) {\n  return (\n    <div className=\"container\">\n      <p style={text}>\n        {users.username}\n      </p>\n      <p style={text}>\n        {users.email}\n      </p>\n    </div>\n  );\n}\nUser.propTypes = {\n  users: PropTypes.shape({\n    username: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n  }).isRequired,\n};\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst styleCompleted = {\n  fontFamily: 'italic',\n  textDecoration: 'line-through',\n  color: 'silver',\n}\n\nfunction TodoItem({ item }) {\n  return (\n    <div className=\"container\">\n      <p\n        className=\"text-left\"\n        style={item.completed ? styleCompleted : null}\n      >\n        {item.title}\n      </p>\n      <input\n        type=\"checkbox\"\n        defaultChecked={item.completed}\n      />\n      <span\n        className=\"checkmark\"\n      />\n    </div>\n  );\n}\nTodoItem.propTypes = {\n  item: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n};\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nfunction TodoList({ item }) {\n  return (\n    <div>\n      <TodoItem item={item} />\n    </div>\n  );\n}\n\nTodoList.propTypes = {\n  item: PropTypes.shape({\n  }).isRequired,\n};\nexport default TodoList;\n","export const getTodos = async() => {\n  const response = await fetch('https://jsonplaceholder.typicode.com/todos');\n  const todos = await response.json();\n  return todos;\n};\n\nexport const getUsers = async() => {\n  const response = await fetch('https://jsonplaceholder.typicode.com/users');\n  const users = await response.json();\n\n  return users;\n};\n","import React from 'react';\nimport User from './components/User';\nimport TodoList from './components/TodoList';\nimport './App.css';\nimport { getTodos, getUsers } from './components/dataComponents';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    isLoaded: false,\n    isLoading: false,\n  };\n\n  handleClick = async() => {\n    this.setState({\n      isLoading: true,\n    });\n    const todos = await getTodos();\n    const users = await getUsers();\n    const result = todos.map(todo => ({\n      ...todo,\n      user: users.find(user => user.id === todo.userId),\n    }));\n    this.setState({\n      todos: result,\n      isLoading: false,\n      isLoaded: true,\n    });\n  };\n\n    sortName = () => {\n      this.setState(prevState => ({\n        todos:\n          prevState.todos.sort((a, b) =>\n            (a.user.username > b.user.username) ? 1 : -1),\n      }));\n    };\n\n    sortComplete = () => {\n      this.setState(prevState => ({\n        todos:\n          prevState.todos.sort((a, b) => (a.completed > b.completed) ? -1 : 1),\n      }));\n    };\n\n    render() {\n      const res = this.state.todos.map(todo => (\n        <div key={todo.id} className=\"todo\">\n          <TodoList item={todo} />\n          <User users={todo.user} />\n        </div>\n      ));\n      if (!this.state.isLoaded) {\n        return (\n          <button\n            type=\"submit\"\n            className=\"btn btn-success mt-5\"\n            onClick={this.handleClick}\n            disabled={this.state.isLoading}\n          >\n            {this.state.isLoading ? 'Loading...' : 'Load' }\n          </button>\n        );\n      }\n\n      return (\n        <main className=\"App\">\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary mt-5 mb-5 mr-3\"\n            onClick={this.sortName}\n          >\n            sortName\n          </button>\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary mt-5 mb-5\"\n            onClick={this.sortComplete}\n          >\n            sortComplete\n          </button>\n          <div>{res}</div>\n        </main>\n      );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}